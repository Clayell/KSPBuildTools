name: build

on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      solution-path:
        type: string
        default: .
      build-configuration:
        type: string
        default: Release
      artifacts:
        type: string
        default: GameData
      ksp-zip-url:
        type: string
        default: https://github.com/KSPModdingLibs/KSPBuildTools/raw/main/KSP-1.12.5.zip
    secrets:
      ksp-zip-password:
        required: false

env:
  KSP_ROOT: /tmp/ksp
  RELEASE_STAGING: /tmp/release

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Mod Repo
        uses: actions/checkout@v4
        with:
          # working around a bug in checkout action: https://github.com/actions/checkout/issues/1418#issuecomment-1899122964
          ref: "${{ github.head_ref || github.ref }}"
  
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 5.x
  
      - name: Download KSP Libs
        run: |
          wget ${{ inputs.ksp-zip-url }} -O /tmp/ksp.zip
          unzip -P "${{ secrets.ksp-zip-password }}" /tmp/ksp.zip -d "${{ env.KSP_ROOT }}"
  
      - name: Install Dependencies
        run: echo "TODO"
  
      - name: Update Version
        run: echo "TODO"
        # TODO: fetch tag, datetime, etc
  
      - name: Restore NuGet Packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ${{env.SOLUTION_FILE_PATH}}
  
      - name: Build Mod Solution
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild /p:Configuration=${{inputs.build-configuration}} /p:KSPRoot="${{env.KSP_ROOT}}" /p:ManagedRelativePath=KSP_x64_Data/Managed ${{env.SOLUTION_FILE_PATH}}

      - name: Assemble Release
        run: |
          mkdir ${{env.RELEASE_STAGING}}
          cp -r ${{github.workspace}}/${{inputs.artifact-root}} ${{env.RELEASE_STAGING}}/${{inputs.artifact-root}}
          # TODO: delete pdb files?
          for artifact in ${{inputs.artifacts}}
          do
            cp -r ${{github.workspace}}/$artifact ${{env.RELEASE_STAGING}}/$artifact
          end
  
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          # TODO: add version to filename?
          name: ${{github.event.repository.name}}-${{inputs.build-configuration}}
          path: ${{env.RELEASE_STAGING}}
          if-no-files-found: error
